# SECURITY
# This is a public repository.  Mind what you write.
# Do not accept modifications from people outside CDCK.
# Seek infra security review if unsure.

---
var_sources:
- name: xacco
  type: vault
  config:
    url: http://127.0.0.1:8200
    path_prefix: /aws-xacc-obfuscate
    client_token: unused-but-some-value-required

resource_types:
- name: metadata
  type: registry-image
  source:
    repository:            practical-concourse/resource-types/metadata
    aws_access_key_id:     ((concourse-ecr-pull-rtype.AWS_ACCESS_KEY_ID))
    aws_secret_access_key: ((concourse-ecr-pull-rtype.AWS_SECRET_ACCESS_KEY))
    aws_region:            ((obfuscate-aws-docker-registry.region))

resources:
- name: metadata
  type: metadata

- name: discourse-auth-proxy
  type: git
  icon: github
  source:
    uri: git@github.com:discourse/discourse-auth-proxy.git
    branch: ((branch))
    private_key: ((github-discoursebuild))
  webhook_token: unused-but-some-value-required

- name: alpine
  type: registry-image
  icon: docker
  check_every: 24h
  source:
    repository: alpine
    tag: "3"
    username: ((docker-hub.username))
    password: ((docker-hub.password))

- name: debian-oci
  type: registry-image
  icon: docker
  check_every: 24h
  source:
    repository: debian
    tag: "bookworm-slim"
    username: ((docker-hub.username))
    password: ((docker-hub.password))

- name: go1-oci
  type: registry-image
  icon: docker
  check_every: 168h
  source:
    repository: golang
    tag: "1-alpine"
    username: ((docker-hub.username))
    password: ((docker-hub.password))

- name: ecr
  type: registry-image
  icon: docker
  source:
    repository:            ((image_repository))
    aws_access_key_id:     ((xacco:machine/concourse-ecr-push/docker-registry.AWS_ACCESS_KEY_ID))
    aws_secret_access_key: ((xacco:machine/concourse-ecr-push/docker-registry.AWS_SECRET_ACCESS_KEY))
    aws_session_token:     ((xacco:machine/concourse-ecr-push/docker-registry.AWS_SESSION_TOKEN))
    aws_region:            ((obfuscate-aws-docker-registry.region))

jobs:
- name: build
  serial: true
  plan:
  - in_parallel:
    - get: discourse-auth-proxy
      trigger: true
    - get: alpine
    - get: debian-oci
      params: {format: oci}
    - get: go1-oci
      params: {format: oci}
    - put: metadata

  # The pipeline will always push ((image_tag)).  This tag is mutable.
  # So that older images are easier to retrieve,
  # the pipeline will also push a tag whose value is assembled
  # from the Concourse build ID and source revision ID.
  # This latter tag is intended to be immutable.
  - task: transform-tags
    image: alpine
    config:
      platform: linux
      inputs:
      - name: metadata
      - name: discourse-auth-proxy
      outputs:
      - name: tags
      params:
        BASE_TAG: ((image_tag))
      run:
        path: sh
        args:
        - -exc
        - |
          test -n "${BASE_TAG}"
          BUILD_ID="$(head -n 1 metadata/build_id)"
          test -n "${BUILD_ID}"
          REVISION="$(head -n 1 discourse-auth-proxy/.git/short_ref)"
          test -n "${REVISION}"
          echo "${BASE_TAG}" >> tags/tags
          echo "${BASE_TAG}-${BUILD_ID}-${REVISION}" >> tags/tags

  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
          username: ((docker-hub.username))
          password: ((docker-hub.password))
      inputs:
      - name: discourse-auth-proxy
      - name: debian-oci
      - name: go1-oci
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT:                        discourse-auth-proxy
        DOCKERFILE:                     discourse-auth-proxy/dist/Dockerfile
        IMAGE_ARG_BASE_IMAGE_DEBIAN:    debian-oci/image.tar
        IMAGE_ARG_BASE_IMAGE_GO_ALPINE: go1-oci/image.tar
        OUTPUT_OCI:                     true
      run:
        path: build

  - put: ecr
    inputs:
    - image
    - tags
    params:
      image: image/image
      additional_tags: tags/tags
    get_params: {skip_download: true}
